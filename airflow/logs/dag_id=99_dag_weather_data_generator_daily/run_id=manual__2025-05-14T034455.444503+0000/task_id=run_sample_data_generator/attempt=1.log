{"timestamp":"2025-05-14T03:44:58.285018","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-14T03:44:58.285842","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/99_weather_data_generator_daily.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-14T03:44:58.298156","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-14T03:44:58.322800","level":"warning","event":"Pydantic serializer warnings:\n  PydanticSerializationUnexpectedValue(Expected `str` - serialized value may not be as expected [input_value={'MINIO_ROOT_USER': 'admi...KET_CURATED': 'curated'}, input_type=dict])","category":"UserWarning","filename":"/home/airflow/.local/lib/python3.12/site-packages/pydantic/main.py","lineno":463,"logger":"py.warnings"}
{"timestamp":"2025-05-14T03:44:59.655932Z","level":"error","event":"2025-05-14 03:44:59,655 - sample_data_generator.py - Line: 51 - INFO - Initialized DataGenerator with empty_rate=20.0%, error_rate=20.0%","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T03:44:59.656290Z","level":"error","event":"2025-05-14 03:44:59,655 - sample_data_generator.py - Line: 316 - INFO - Rates: empty_rate=20.0%%, error_rate=20.0%%","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T03:44:59.677839Z","level":"error","event":"2025-05-14 03:44:59,677 - sample_data_generator.py - Line: 298 - INFO - Uploaded data/weather_data_2025-05-14.json to bucket 'raw'","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T03:44:59.678370Z","level":"error","event":"2025-05-14 03:44:59,677 - sample_data_generator.py - Line: 345 - INFO - Uploaded to MinIO bucket 'raw', object 'data/weather_data_2025-05-14.json'","chan":"stderr","logger":"task"}
{"timestamp":"2025-05-14T03:44:59.751188","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
